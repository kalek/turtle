{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["AMOUNT_NUMBERS","App","state","data","getClass","name","index","item","length","lastItems","slice","lastNumbers","forEach","push","parseFloat","maxNumber","Math","max","apply","minNumber","min","dataTmp","axios","get","respCoffee","htmlCoffee","$coffee","cheerio","load","tmpCoffee","each","date","children","priceCoffee","respWig","htmlWig","$wig","tmpWig","priceWig","respDax","htmlDax","$dax","tmpDax","priceDax","respOil","htmlOil","$oil","tmpOil","priceOil","respGold","htmlGold","$Gold","tmpGold","priceGold","respEurUsd","htmlEurUsd","$EurUsd","tmpEurUsd","priceEurUsd","respsp500","htmlsp500","$sp500","tmpsp500","pricesp500","this","setState","className","cellPadding","cellSpacing","border","map","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46166601.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport cheerio from \"cheerio\";\nimport { each } from \"lodash\";\nimport \"./App.css\";\n\nconst AMOUNT_NUMBERS = 10;\n\nclass App extends Component {\n  state = {\n    data: null\n  };\n  async componentDidMount() {\n    const dataTmp = [];\n    // KAWA\n    const respCoffee = await axios.get(\"https://stooq.pl/q/d/?s=kc.f\");\n    const htmlCoffee = respCoffee.data;\n    const $coffee = cheerio.load(htmlCoffee);\n    const tmpCoffee = $coffee(\"#fth1 tbody tr\");\n    each(tmpCoffee, item => {\n      dataTmp.push({\n        date: item.children[1].children[0].data,\n        priceCoffee: item.children[5].children[0].data\n      });\n    });\n\n    // WIG\n    const respWig = await axios.get(\"https://stooq.pl/q/d/?s=wig20\");\n    const htmlWig = respWig.data;\n    const $wig = cheerio.load(htmlWig);\n    const tmpWig = $wig(\"#fth1 tbody tr\");\n    each(tmpWig, (item, index) => {\n      dataTmp[index].priceWig = item.children[5].children[0].data;\n    });\n\n    // DAX\n    const respDax = await axios.get(\"https://stooq.pl/q/d/?s=^dax\");\n    const htmlDax = respDax.data;\n    const $dax = cheerio.load(htmlDax);\n    const tmpDax = $dax(\"#fth1 tbody tr\");\n    each(tmpDax, (item, index) => {\n      dataTmp[index].priceDax = item.children[5].children[0].data;\n    });\n\n    // OIL\n    const respOil = await axios.get(\"https://stooq.pl/q/d/?s=cl.f\");\n    const htmlOil = respOil.data;\n    const $oil = cheerio.load(htmlOil);\n    const tmpOil = $oil(\"#fth1 tbody tr\");\n    each(tmpOil, (item, index) => {\n      dataTmp[index].priceOil = item.children[5].children[0].data;\n    });\n\n    // GOLD\n    const respGold = await axios.get(\"https://stooq.pl/q/d/?s=xauusd\");\n    const htmlGold = respGold.data;\n    const $Gold = cheerio.load(htmlGold);\n    const tmpGold = $Gold(\"#fth1 tbody tr\");\n    each(tmpGold, (item, index) => {\n      dataTmp[index].priceGold = item.children[5].children[0].data;\n    });\n\n    // EURUSD\n    const respEurUsd = await axios.get(\"https://stooq.pl/q/d/?s=eurusd\");\n    const htmlEurUsd = respEurUsd.data;\n    const $EurUsd = cheerio.load(htmlEurUsd);\n    const tmpEurUsd = $EurUsd(\"#fth1 tbody tr\");\n    each(tmpEurUsd, (item, index) => {\n      dataTmp[index].priceEurUsd = item.children[5].children[0].data;\n    });\n\n    // EURUSD\n    const respsp500 = await axios.get(\"https://stooq.pl/q/d/?s=^spx\");\n    const htmlsp500 = respsp500.data;\n    const $sp500 = cheerio.load(htmlsp500);\n    const tmpsp500 = $sp500(\"#fth1 tbody tr\");\n    each(tmpsp500, (item, index) => {\n      dataTmp[index].pricesp500 = item.children[5].children[0].data;\n    });\n\n    // SAVE DATA\n    this.setState({ data: dataTmp });\n  }\n  getClass = (name, index, item) => {\n    const { data } = this.state;\n    if (index >= data.length - (AMOUNT_NUMBERS - 1)) {\n      return \"grey\";\n    } else {\n      const lastItems = data.slice(index + 1, index + AMOUNT_NUMBERS + 1);\n      const lastNumbers = [];\n      lastItems.forEach(item => {\n        lastNumbers.push(parseFloat(item[name]));\n      });\n      const maxNumber = Math.max.apply(Math, lastNumbers);\n      const minNumber = Math.min.apply(Math, lastNumbers);\n      if (parseFloat(item[name]) > maxNumber) {\n        return \"buy\";\n      }\n      if (parseFloat(item[name]) < minNumber) {\n        return \"sell\";\n      }\n    }\n  };\n  render() {\n    const { data } = this.state;\n    return (\n      <div className=\"app\">\n        {data && (\n          <table cellPadding=\"0\" cellSpacing=\"0\" border=\"0\">\n            <tr>\n              <td>Data</td>\n              <td>KAWA</td>\n              <td>WIG</td>\n              <td>DAX</td>\n              <td>OIL</td>\n              <td>GOLD</td>\n              <td>EURUSD</td>\n              <td>SP500</td>\n            </tr>\n            {data.map((item, index) => {\n              return (\n                <tr>\n                  <td>{item.date}</td>\n                  <td className={this.getClass(\"priceCoffee\", index, item)}>\n                    {item.priceCoffee}\n                  </td>\n                  <td className={this.getClass(\"priceWig\", index, item)}>\n                    {item.priceWig}\n                  </td>\n                  <td className={this.getClass(\"priceDax\", index, item)}>\n                    {item.priceDax}\n                  </td>\n                  <td className={this.getClass(\"priceOil\", index, item)}>\n                    {item.priceOil}\n                  </td>\n                  <td className={this.getClass(\"priceGold\", index, item)}>\n                    {item.priceGold}\n                  </td>\n                  <td className={this.getClass(\"priceEurUsd\", index, item)}>\n                    {item.priceEurUsd}\n                  </td>\n                  <td className={this.getClass(\"pricesp500\", index, item)}>\n                    {item.pricesp500}\n                  </td>\n                </tr>\n              );\n            })}\n          </table>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}